import mysql.connector
from database import get_read_connection, get_write_connection
import queries
from itertools import islice

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–∞–º
conn_read = get_read_connection()
cursor_read = conn_read.cursor()
conn_write = get_write_connection()
cursor_write = conn_write.cursor()



def execute_query(cursor, query, params=()):
    try:
        # print(f"DEBUG: –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å - {query}, –ü–∞—Ä–∞–º–µ—Ç—Ä—ã - {params}")
        cursor.execute(query, params) if params else cursor.execute(query)
        results = cursor.fetchall()
        # print(f"DEBUG: –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - {results}")
        return results
    except mysql.connector.Error as err:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–∞: {err}")
        return []


def search_films_by_keyword(cursor_read, cursor_write, conn_write, query, params, keyword):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑—É –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤."""
    cursor_read.execute(query, tuple(params))
    films = cursor_read.fetchall()

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –≤ –±–∞–∑—É **–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞**
    cursor_write.execute(queries.INSERT_POPULAR_SEARCH, (keyword,))
    conn_write.commit()

    if not films:
        print("\n‚ùó+ –§–∏–ª—å–º—ã –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")  # ‚úÖ  —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!
        return []  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫

    return films

def get_genres(cursor_read):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤."""
    category_data = dict(execute_query(cursor_read, queries.GET_CATEGORIES))
    print("\nüìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∂–∞–Ω—Ä—ã:")
    for category_id, name in category_data.items():
        print(f"{category_id}: {name}")
    return category_data

def search_by_genre(cursor_read, cursor_write, conn_write, ask_year=False):

    """–í—ã–±–æ—Ä –∂–∞–Ω—Ä–∞ –∏, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –≥–æ–¥–∞."""
    # category_data = get_genres(cursor_read, conn_read)
    category_data = get_genres(cursor_read)
    while True:
        user_choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∂–∞–Ω—Ä–∞ (1 - 16): ").strip()
        if not user_choice.isdigit() or int(user_choice) not in category_data:
            print("‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∂–∞–Ω—Ä–∞.")
            continue
        genre_number = int(user_choice)
        break

    film_year = None
    if ask_year:
        while True:
            film_year = input("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ —Ñ–∏–ª—å–º–∞ (1990 - 2025) –∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞: ").strip()

            if not film_year:  # üî• –ï—Å–ª–∏ –ø—É—Å—Ç–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—ã–±–æ—Ä
                break

            if film_year.isdigit() and 1990 <= int(film_year) <= 2025:
                film_year = int(film_year)
                break  # ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ ‚Üí –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞

            print("‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥.")  # üî• –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ ‚Üí –ø–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å

    query = queries.GET_FILMS_BY_GENRE_AND_YEAR if ask_year and film_year else queries.GET_FILMS_BY_GENRE
    params = [category_data[genre_number]] + ([film_year] if film_year else [])
    films = execute_query(cursor_read, query, tuple(params))

    if not films:  # üî• –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        print("\n‚ùó –§–∏–ª—å–º—ã –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∂–∞–Ω—Ä—É –∏ –≥–æ–¥—É –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return []

    execute_query(cursor_write, queries.INSERT_POPULAR_GENRE, (category_data[genre_number],))
    conn_write.commit()

    return films


def display_films(films, cursor_read):
    """–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –µ—â—ë 10 –∏–ª–∏ –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å–º–∞ –ø–æ ID."""
    if not films:
        print("\n‚ùó –§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    print("\nüé¨ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã:")

    for i in range(0, len(films), 10):
        print("\nüìå –ë–ª–æ–∫ —Ñ–∏–ª—å–º–æ–≤:")
        for film in islice(films, i, i + 10):
            film_id, title, genre, release_year, description = film
            print(f"ID: {film_id}, üé¨ –ù–∞–∑–≤–∞–Ω–∏–µ: {title}, üóÇÔ∏è –ñ–∞–Ω—Ä: {genre}, üìÜ –ì–æ–¥: {release_year}\n"
                  f"               üìù–û–ø–∏—Å–∞–Ω–∏–µ: {description}")

        if i + 10 < len(films):
            while True:
                user_choice = input("\nüîç –í–≤–µ–¥–∏—Ç–µ:\n1Ô∏è‚É£ - –ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë 10 —Ñ–∏–ª—å–º–æ–≤\n2Ô∏è‚É£ - –í—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º –ø–æ ID\n"
                                    "0Ô∏è‚É£ - –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä\n–í–∞—à –≤—ã–±–æ—Ä: ").strip()

                if user_choice == "1":
                    break  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–ª–æ–∫–∞
                elif user_choice == "2":
                    return select_film_by_id(cursor_read, films)  # üî• –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —Ñ–∏–ª—å–º–∞
                elif user_choice == "0":
                    print("‚è≠Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.")
                    return
                else:
                    print("‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ 1, 2 –∏–ª–∏ 0.")


def select_film_by_id(cursor_read, films):
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º –ø–æ ID –∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏."""
    film_ids = {film[0] for film in films}  # üî• –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö ID

    while True:
        selected_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID —Ñ–∏–ª—å–º–∞ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞): ").strip()
        if selected_id.isdigit():
            selected_id = int(selected_id)

            if selected_id == 0:
                print("‚è≠Ô∏è –í—ã—Ö–æ–¥ –∏–∑ –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å–º–∞.")
                return  # üî• –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç '0'

            if selected_id not in film_ids:  # üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∏–ª—å–º –≤ —Å–ø–∏—Å–∫–µ
                print("‚ùó –û—à–∏–±–∫–∞: –§–∏–ª—å–º —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–º —Å–ø–∏—Å–∫–µ.")
                continue  # üî• –ü–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–æ–¥–∏—Ç—å ID —Å–Ω–æ–≤–∞

            # –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∏–ª—å–º–µ
            cursor_read.execute(queries.GET_FILM_BY_ID, [selected_id])
            film_info = cursor_read.fetchone()

            if film_info:
                film_id, title, genre, release_year, description = film_info
                print("\n‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ñ–∏–ª—å–º:")
                print(f"üé¨ –ù–∞–∑–≤–∞–Ω–∏–µ: {title}")
                print(f"üóÇÔ∏è –ñ–∞–Ω—Ä: {genre}")
                print(f"üìÜ –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {release_year}")
                print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {description}")

                while True:
                    user_choice = input("\n–•–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â—ë –æ–¥–∏–Ω —Ñ–∏–ª—å–º? (1 - –î–∞, 0 - –ù–µ—Ç): ").strip()

                    if user_choice == "1":
                        return  # üî• –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
                    elif user_choice == "0":
                        print("üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                        exit()  # üî• –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã
                    else:
                        print("‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ 1 (–¥–∞) –∏–ª–∏ 0 (–Ω–µ—Ç).")
                return  # üî• –ü–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π ID, –≤–º–µ—Å—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            else:
                print("‚ùó –û—à–∏–±–∫–∞: –§–∏–ª—å–º —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")


# --- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ ---
search_queries = {
    "1": {"query": queries.GET_FILMS_BY_TITLE, "params": lambda k: [f"%{k}%"]},
    "2": {"query": queries.GET_FILMS_BY_DESCRIPTION, "params": lambda k: [f"%{k}%"]},
    "3": {"query": queries.GET_FILMS_BY_TITLE_OR_DESCRIPTION, "params": lambda k: [f"%{k}%", f"%{k}%"]}
}

while True:
    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞:\n"
                   "1Ô∏è‚É£ –ü–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ñ–∏–ª—å–º–∞\n"
                   "2Ô∏è‚É£ –ü–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ —Ñ–∏–ª—å–º–∞\n"
                   "3Ô∏è‚É£ –ü–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–∏ —Ñ–∏–ª—å–º–∞\n"
                   "4Ô∏è‚É£ –ü–æ –∂–∞–Ω—Ä—É\n"
                   "5Ô∏è‚É£ –ü–æ –∂–∞–Ω—Ä—É –∏ –≥–æ–¥—É\n"
                   "6Ô∏è‚É£ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã\n"
                   "0Ô∏è‚É£ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É\n"
                   "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ (0-6): ").strip()

    if choice == "0":
        print("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        break

    films = []

    if choice in search_queries:
        while True:
            keyword = input("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤): ").strip()

            if " " in keyword:  # üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—Ä–æ–±–µ–ª
                print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–±–µ–ª—ã. –í–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ —Å–ª–æ–≤–æ.")
                continue  # üî• –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–≤–æ–¥ –∑–∞–Ω–æ–≤–æ
            elif not keyword:
                print("‚ùå –û—à–∏–±–∫–∞: –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
                continue  # üî• –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–≤–æ–¥ –∑–∞–Ω–æ–≤–æ
            break  # üî• –ï—Å–ª–∏ –≤–≤–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤

        query_data = search_queries[choice]
        films = search_films_by_keyword(cursor_read, cursor_write, conn_write, query_data["query"],
                                        query_data["params"](keyword), keyword)


    elif choice == "4":
        # films = search_by_genre(cursor_read, conn_read, cursor_write, conn_write, ask_year=False)
        films = search_by_genre(cursor_read, cursor_write, conn_write, ask_year=False)

    elif choice == "5":
        # films = search_by_genre(cursor_read, conn_read, cursor_write, conn_write, ask_year=True)
        films = search_by_genre(cursor_read, cursor_write, conn_write, ask_year=True)


    elif choice == "6":
        print("üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã...")

        # üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–∞–º–∏
        if not conn_read.is_connected():
            print("üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MySQL...")
            conn_read = get_read_connection()
            cursor_read = conn_read.cursor()


        top_genres = execute_query(cursor_write, queries.GET_TOP_GENRES)
        top_keywords = execute_query(cursor_write, queries.GET_TOP_KEYWORDS)


        # üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ popular_search
        cursor_write.execute("SELECT COUNT(*) FROM Popular_Searches")
        count = cursor_write.fetchone()

        # ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
        if not top_genres or not isinstance(top_genres, list):
            print("‚ùó –û—à–∏–±–∫–∞: –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∂–∞–Ω—Ä–∞—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã!")
        else:
            print("\nüî• –¢–æ–ø-5 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤:")
            for genre, count in top_genres:
                print(f"üé¨ {genre}: {count} –∑–∞–ø—Ä–æ—Å–æ–≤")

        if not top_keywords or not isinstance(top_keywords, list):
            print("‚ùó –û—à–∏–±–∫–∞: –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã!")
        else:
            print("\nüîç –¢–æ–ø-5 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤:")
            for keyword, count in top_keywords:
                print(f"üìù {keyword.upper()}: {count} –∑–∞–ø—Ä–æ—Å–æ–≤")

    if films:
        display_films(films, cursor_read)
        select_film_by_id(cursor_read, films)  # ‚úÖ –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è films

# –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
cursor_read.close()
conn_read.close()
cursor_write.close()
conn_write.close()
